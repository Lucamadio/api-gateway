<!--
	Routing Configuration (for development)
	
	Here you can configure routing rules for Membrane Service Proxy.

	This file is used when directly starting from an IDE only (Eclipse,
	for example).

	Have a look at router/conf/proxies.xml or router/conf/proxies-full-sample.xml or
	https://membrane-soa.org/service-proxy-doc/current/configuration/reference/ to be
	inspired on what you can do here. ;)
	
-->
<spring:beans xmlns="http://membrane-soa.org/proxies/1/"
              xmlns:spring="http://www.springframework.org/schema/beans"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
					    http://membrane-soa.org/proxies/1/ http://membrane-soa.org/schemas/proxies-1.xsd">

    <router>

        <!-- Forwards SOAP requests for the BLZService on port 2000 to the Web server on host thomas-bayer.com -->
<!--        <soapProxy port="2000" wsdl="http://www.thomas-bayer.com/axis2/services/BLZService?wsdl">-->
<!--        </soapProxy>-->

        <!-- Displays a list of all configured proxies. -->
        <serviceProxy>
            <index/>
        </serviceProxy>

        <openAPIProxy name="OpenAPI" port="2000">
<!--            <spec location="fruitshop-api.yml" validate="requests"/>-->
<!--            <spec location="contacts-api-v1.yml" validateRequests="true"/>-->
            <spec dir="../core/src/test/resources/openapi/specs" validateRequests="yes"/>
        </openAPIProxy>

        <serviceProxy name="Prometheus Monitoring" port="8888">
            <path>/metrics</path>
            <prometheus/>
        </serviceProxy>

        <!-- Sets up the Administration Web Interface on port 9000-->
        <serviceProxy name="Console" port="9000">
            <basicAuthentication>
                <user name="admin" password="membrane"/>
            </basicAuthentication>
            <adminConsole/>
        </serviceProxy>

        <serviceProxy port="3000">
            <path isRegExp="true">/demo-api/v2/persons/.*</path>
            <response>
                <template pretty="true" contentType="application/json">
                    {
                    "id": "12358",
                    "name": "Bo",
                    "email": "foo@baz.org"
                    }
                </template>
            </response>
            <return statusCode="201"/>
        </serviceProxy>

        <serviceProxy port="3000" method="GET">
            <path>/demo-api/v2/persons</path>
            <response>
                <template pretty="true" contentType="application/json">
                    { "persons": [
                    {
                    "id": "12358",
                    "name": "Bo",
                    "email": "foo@baz.org"
                    }
                    ] }
                </template>
            </response>
            <return statusCode="201"/>
        </serviceProxy>


    </router>

</spring:beans>